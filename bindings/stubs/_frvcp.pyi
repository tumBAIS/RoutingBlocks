DPLabel = Any


class FRVCP:
    def __init__(self, arg0: Instance, arg1: Propagator) -> None: ...

    def optimize(self, arg0: List[int]) -> List[int]: ...


class Propagator:
    def __init__(self) -> None: ...

    def cheaper_than(self, arg0: DPLabel, arg1: DPLabel) -> bool: ...

    def create_root_label(self) -> DPLabel: ...

    def dominates(self, arg0: DPLabel, arg1: DPLabel) -> bool: ...

    def extract_path(self, arg0: DPLabel) -> List[VertexID]: ...

    def is_final_label(self, arg0: DPLabel) -> bool: ...

    def order_before(self, arg0: DPLabel, arg1: DPLabel) -> bool: ...

    def prepare(self, arg0: List[VertexID]) -> None: ...

    def propagate(self, arg0: DPLabel, arg1: Vertex, arg2: Vertex, arg3: Arc) -> Optional[DPLabel]: ...

class Node:
    def __init__(self, vertex: Vertex, fwd_label: AnyForwardLabel, bwd_label: AnyBackwardLabel) -> None: ...

    def cost(self, evaluation: Evaluation) -> float: ...

    def cost_components(self, evaluation: Evaluation) -> List[float]: ...

    def feasible(self, evaluation: Evaluation) -> bool: ...

    def update_backward(self, evaluation: Evaluation, predecessor: Node, arc: Arc) -> None: ...

    def update_forward(self, evaluation: Evaluation, successor: Node, arc: Arc) -> None: ...

    @property
    def backward_label(self) -> AnyBackwardLabel: ...

    @property
    def forward_label(self) -> AnyForwardLabel: ...

    @property
    def vertex(self) -> Vertex: ...

    @property
    def vertex_id(self) -> int: ...

    @property
    def vertex_strid(self) -> str: ...

    def __str__(self) -> str: ...
